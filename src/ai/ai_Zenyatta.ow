rule("AI Zenyatta")
{
  event
  {
    Subroutine;
    aiSub_Abilities_Zenyatta;
  }

  actions
  {
    Event Player.ai_IsInAbilitySub = True;
    Call Subroutine(aiSub_ReactionDelay);
    If(Event Player.ai_AbilityButton == Button(Primary Fire));
      Skip If(Is Button Held(Event Player, Button(Primary Fire)), 2);
      Call Subroutine(aiSub_ButtonsReset);
      Start Holding Button(Event Player, Button(Primary Fire));
    Else If(Event Player.ai_AbilityButton == Button(Secondary Fire));
      Call Subroutine(aiSub_ButtonsReset);
      Start Holding Button(Event Player, Button(Secondary Fire));
      Wait(Random Integer(3, 5) * 0.520, Ignore Condition);
      Stop Holding Button(Event Player, Button(Secondary Fire));
    Else If(Event Player.ai_AbilityButton == Button(Ability 1));
    Else If(Event Player.ai_AbilityButton == Button(Ability 2));
      Press Button(Event Player, Button(Ability 2));
    Else If(Event Player.ai_AbilityButton == Button(Ultimate));
      Press Button(Event Player, Button(Ultimate));
    End;
    Event Player.ai_IsInAbilitySub = False;
  }
}

rule("AI Zenyatta General")
{
  event
  {
    Ongoing - Each Player;
    Team 2;
    Zenyatta;
  }

  conditions
  {
    Is Game In Progress == True;
    Is Alive(Event Player) == True;
    Event Player.ai_AIEnabled == True;
  }

  actions
  {
    Event Player.ai_OptimalDistanceDefault = Random Real(12, 16);
    Event Player.ai_OptimalDistance = Event Player.ai_OptimalDistanceDefault;
    Event Player.ai_AimBaseDefault = 0;
    Event Player.ai_AimBase = Event Player.ai_AimBaseDefault;
    Event Player.ai_AimType = 1;
    Event Player.ai_ProjectileSpeed = 90;
    Event Player.ai_HeroInitialized = True;
  }
}

rule("AI Zenyatta Attack Primary")
{
  event
  {
    Ongoing - Each Player;
    Team 2;
    Zenyatta;
  }

  conditions
  {
    Event Player.ai_AIEnabled == True;
    Event Player.ai_CnAttack == True;
    Event Player.ai_IsInAbilitySub == False;
    Is Alive(Event Player) == True;
    Is Alive(Players In Slot(Slot Of(Event Player), Team 1)) == True;
    Is Using Ultimate(Event Player) == False;
    Distance Between(Event Player, Players In Slot(Slot Of(Event Player), Team 1)) <= 35;
    Event Player.ai_RetCastDistance < 3;
  }

  actions
  {
    Event Player.ai_AbilityButton = Button(Primary Fire);
    Call Subroutine(aiSub_Abilities_Zenyatta);
    Wait(0.400, Ignore Condition);
    Loop If Condition Is True;
    Stop Holding Button(Event Player, Button(Primary Fire));
  }
}

rule("AI Zenyatta Attack Secondary")
{
  event
  {
    Ongoing - Each Player;
    Team 2;
    Zenyatta;
  }

  conditions
  {
    Event Player.ai_AIEnabled == True;
    Event Player.ai_CnAttack == True;
    Event Player.ai_IsInAbilitySub == False;
    Is Alive(Event Player) == True;
    Is Alive(Players In Slot(Slot Of(Event Player), Team 1)) == True;
    Is Using Ultimate(Event Player) == False;
    Distance Between(Event Player, Players In Slot(Slot Of(Event Player), Team 1)) >= 10;
    Distance Between(Event Player, Players In Slot(Slot Of(Event Player), Team 1)) <= 12;
    Event Player.ai_RetCastDistance < 2.5;
    Is Firing Primary(Event Player) == False;
  }

  actions
  {
    Event Player.ai_AbilityButton = Button(Secondary Fire);
    Call Subroutine(aiSub_Abilities_Zenyatta);
    Loop If Condition Is True;
  }
}

rule("AI Zenyatta Orb of Discord")
{
  event
  {
    Ongoing - Each Player;
    Team 2;
    Zenyatta;
  }

  conditions
  {
    Event Player.ai_AIEnabled == True;
    Event Player.ai_CnUseAbilities == True;
    Event Player.ai_IsInAbilitySub == False;
    Is Alive(Event Player) == True;
    Is Alive(Players In Slot(Slot Of(Event Player), Team 1)) == True;
    Event Player.ai_RetCastDistance < 1.25;
    Distance Between(Event Player, Players In Slot(Slot Of(Event Player), Team 1)) <= 75;
    Is Using Ability 2(Event Player) == False;
    Is Using Ultimate(Event Player) == False;
  }

  actions
  {
    Event Player.ai_AbilityButton = Button(Ability 2);
    Call Subroutine(aiSub_Abilities_Zenyatta);
  }
}

rule("AI Zenyatta Transcendence")
{
  event
  {
    Player Took Damage;
    Team 2;
    Zenyatta;
  }

  conditions
  {
    Event Player.ai_AIEnabled == True;
    Event Player.ai_CnUseAbilities == True;
    Event Player.ai_IsInAbilitySub == False;
    Is Alive(Event Player) == True;
    Is Alive(Players In Slot(Slot Of(Event Player), Team 1)) == True;
    Ultimate Charge Percent(Event Player) == 100;
    Is Using Ultimate(Event Player) == False;
    Health(Event Player) < 50;
  }

  actions
  {
    Event Player.ai_AbilityButton = Button(Ultimate);
    Call Subroutine(aiSub_Abilities_Zenyatta);
  }
}

